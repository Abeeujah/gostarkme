name: CI

on:
  pull_request:
    branches:
      - dev

  push:
    branches:
      - dev
      - main

  workflow_dispatch:

jobs: 
  check-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            contracts_dir: 
              - 'contracts/src/**'

      - name: Setup Scarb
        uses: software-mansion/setup-scarb@v1
        #if: steps.changes.outputs.contracts_dir == 'true'
        with:
          scarb-version: "2.6.5"

      - name: Run Scarb formatting
        #if: steps.changes.outputs.contracts_dir == 'true'
        working-directory: contracts
        run: scarb fmt
  
  check-contracts-changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            contracts_dir: 
              - 'contracts/src/**'
              
      - name: Install scarb
        uses: software-mansion/setup-scarb@v1
        #if: steps.changes.outputs.contracts_dir == 'true'
        with:
          scarb-version: "2.6.5"

      - name: Run Scarb check
        #if: steps.changes.outputs.contracts_dir == 'true'
        working-directory: contracts
        run: scarb check
    
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            contracts_dir: 
              - 'contracts/src/**'

      - name: Install Scarb
        uses: software-mansion/setup-scarb@v1
        #if: steps.changes.outputs.contracts_dir == 'true'
        with:
          scarb-version: "2.6.5"


      - name: Install snfoundry
        uses: foundry-rs/setup-snfoundry@v3
        with:
          starknet-foundry-version: "0.20.1"

      - name: Run Cairo tests
        id: cairo_tests
        run: bash scripts/run_tests.sh
